openapi: 3.0.1
info:
  title: GitHub MCP Server
  description: Stream GitHub repos, issues and users via your MCP Server proxy.
  version: 0.1.0
servers:
  - url: https://gwk3pwgj.asse.devtunnels.ms:4000

paths:
  # —— HTTP 接口 —— #
  /repos:
    get:
      summary: Get repositories
      description: Fetch repositories for a given user.
      parameters:
        - name: user
          in: query
          required: true
          schema:
            type: string
          description: GitHub username (e.g. "nikefd")
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
          description: Results per page
      responses:
        '200':
          description: Repository list JSON
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Repo'

  /issues:
    get:
      summary: Get issues
      description: Fetch issues for a given repository.
      parameters:
        - name: owner
          in: query
          required: true
          schema:
            type: string
          description: Repository owner
        - name: repo
          in: query
          required: true
          schema:
            type: string
          description: Repository name
        - name: state
          in: query
          required: false
          schema:
            type: string
          description: Issue state (open or closed)
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
          description: Results per page
      responses:
        '200':
          description: Issues list JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueList'

  /users:
    get:
      summary: Search users
      description: Search GitHub users by query.
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
          description: Search term
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
          description: Results per page
      responses:
        '200':
          description: User search JSON
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'

  # —— SSE 接口 —— #
  /stream/repos:
    get:
      summary: Stream repositories (SSE)
      description: Stream repositories for a user via Server-Sent Events.
      parameters:
        - name: user
          in: query
          required: true
          schema:
            type: string
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: SSE stream of repository events
          content:
            text/event-stream:
              schema:
                type: string

  /stream/issues:
    get:
      summary: Stream issues (SSE)
      description: Stream issues for a repository via Server-Sent Events.
      parameters:
        - name: owner
          in: query
          required: true
          schema:
            type: string
        - name: repo
          in: query
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: false
          schema:
            type: string
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: SSE stream of issue events
          content:
            text/event-stream:
              schema:
                type: string

  /stream/users:
    get:
      summary: Stream users (SSE)
      description: Stream user search results via Server-Sent Events.
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
        - name: perPage
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: SSE stream of user events
          content:
            text/event-stream:
              schema:
                type: string